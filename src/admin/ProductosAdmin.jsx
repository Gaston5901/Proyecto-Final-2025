import React, { useEffect, useState, useCallback } from "react";
import "./ProductosAdmin.css"; 


const API_URL = "http://localhost:3001/productos";
const CATEGORIAS_VALIDAS = ["celulares", "computadoras", "accesorios", "otros"];
const UMBRAL_STOCK_BAJO = 5; // Constante para el umbral de stock bajo o cr├нtico

// =================================================================
// 2. COMPONENTE INTERNO: AlertaStockModal (Muestra la lista de detalles)
// El modal que se abre al tocar el icono тШ░
// =================================================================
function AlertaStockModal({ productosAAlertar, onClose }) {
┬а ┬а // Clasificamos productosAAlertar para mostrar mejor el detalle
┬а ┬а const productosAgotados = productosAAlertar.filter(p => p.stock === 0);
┬а ┬а // Corregido: Solo productos con stock > 0 pero <= UMBRAL
┬а ┬а const productosCasiAgotados = productosAAlertar.filter(p => p.stock > 0 && p.stock <= UMBRAL_STOCK_BAJO);

┬а ┬а return (
┬а ┬а ┬а ┬а <div className="stock-alerta-modal-fondo" onClick={onClose}>
┬а ┬а ┬а ┬а ┬а ┬а <div
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а className="stock-alerta-modal-contenido"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а role="dialog"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а aria-modal="true"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а aria-labelledby="modal-titulo"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а // Evita que el clic en el contenido cierre el modal
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onClick={(e) => e.stopPropagation()}
┬а ┬а ┬а ┬а ┬а ┬а >
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <h2 id="modal-titulo" className="stock-alerta-modal-titulo">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а тЪая╕П Alerta de Stock ({productosAAlertar.length})
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </h2>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <button onClick={onClose} className="stock-alerta-modal-cerrar-btn" aria-label="Cerrar">&times;</button>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <ul className="stock-alerta-lista">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {productosAgotados.length > 0 && (
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <li className="stock-alerta-grupo-titulo">ЁЯЪи Productos AGOTADOS ({productosAgotados.length})</li>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а )}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {productosAgotados.map((prod) => (
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <li key={prod.id} className="stock-alerta-item stock-alerta-item--cero">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <span className="stock-alerta-item-nombre">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {prod.nombre} 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <span className="stock-alerta-categoria">({prod.categoria.charAt(0).toUpperCase() + prod.categoria.slice(1)})</span>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </span>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <span className="stock-alerta-item-detalle">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а Stock: **0** (Cr├нtico)
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </span>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </li>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ))}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {productosCasiAgotados.length > 0 && (
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <li className="stock-alerta-grupo-titulo">тЪая╕П Productos BAJO Stock ({productosCasiAgotados.length})</li>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а )}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {productosCasiAgotados.map((prod) => (
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <li key={prod.id} className="stock-alerta-item stock-alerta-item--bajo">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <span className="stock-alerta-item-nombre">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {prod.nombre}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <span className="stock-alerta-categoria">({prod.categoria.charAt(0).toUpperCase() + prod.categoria.slice(1)})</span>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </span>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <span className="stock-alerta-item-detalle">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а Stock: **{prod.stock}** (Umbral: {UMBRAL_STOCK_BAJO})
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </span>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </li>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ))}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </ul>
┬а ┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а </div>
┬а ┬а );
}

// =================================================================
// 3. COMPONENTE INTERNO: ProductoFormModal (Formulario de Edici├│n/Creaci├│n)
// Este componente no se modifica
// =================================================================
function ProductoFormModal({ productoInicial, onClose, onGuardar }) {
┬а ┬а const [formData, setFormData] = useState({
┬а ┬а ┬а ┬а id: productoInicial?.id || "",
┬а ┬а ┬а ┬а nombre: productoInicial?.nombre || "",
┬а ┬а ┬а ┬а categoria: productoInicial?.categoria || CATEGORIAS_VALIDAS[0],
┬а ┬а ┬а ┬а descripcion: productoInicial?.descripcion || "",
┬а ┬а ┬а ┬а precio: productoInicial?.precio || 0,
┬а ┬а ┬а ┬а stock: productoInicial?.stock || 0,
┬а ┬а ┬а ┬а imagen: productoInicial?.imagen || "",
┬а ┬а });

┬а ┬а const [useFileMode, setUseFileMode] = useState(false);
┬а ┬а const [localFile, setLocalFile] = useState(null);

┬а ┬а const isEditing = !!productoInicial;

┬а ┬а const handleChange = (e) => {
┬а ┬а ┬а ┬а const { name, value } = e.target;
┬а ┬а ┬а ┬а setFormData((prev) => ({
┬а ┬а ┬а ┬а ┬а ┬а ...prev,
┬а ┬а ┬а ┬а ┬а ┬а [name]: name === 'precio' || name === 'stock' ? Number(value) : value,
┬а ┬а ┬а ┬а }));
┬а ┬а };
┬а ┬а 
┬а ┬а const handleFileChange = (e) => {
┬а ┬а ┬а ┬а const file = e.target.files[0];
┬а ┬а ┬а ┬а setLocalFile(file); 
┬а ┬а }

┬а ┬а const handleSubmit = (e) => {
┬а ┬а ┬а ┬а e.preventDefault();
┬а ┬а ┬а ┬а if (formData.precio <= 0 || formData.stock < 0 || formData.nombre.trim() === "") {
┬а ┬а ┬а ┬а ┬а ┬а alert("Por favor, complete los campos obligatorios correctamente.");
┬а ┬а ┬а ┬а ┬а ┬а return;
┬а ┬а ┬а ┬а }

┬а ┬а ┬а ┬а let finalData = { ...formData };
┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а if (useFileMode && localFile) {
┬а ┬а ┬а ┬а ┬а ┬а finalData.imagen = "https://placehold.co/400x300/e9ecef/868e96?text=Imagen+Local"; 
┬а ┬а ┬а ┬а } else if (useFileMode && !localFile && !isEditing) {
┬а ┬а ┬а ┬а ┬а ┬а alert("Debe seleccionar un archivo si eligi├│ la opci├│n de archivo local.");
┬а ┬а ┬а ┬а ┬а ┬а return;
┬а ┬а ┬а ┬а }
┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а if (!useFileMode && finalData.imagen.trim() === "") {
┬а ┬а ┬а ┬а ┬а ┬а finalData.imagen = "https://placehold.co/400x300/e9ecef/868e96?text=Sin+Imagen";
┬а ┬а ┬а ┬а }

┬а ┬а ┬а ┬а onGuardar(finalData);
┬а ┬а };

┬а ┬а return (
┬а ┬а ┬а ┬а <div className="modal-producto-backdrop">
┬а ┬а ┬а ┬а ┬а ┬а <div className="modal-producto-content">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <h3 className="modal-producto-title">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {isEditing ? "Editar Producto" : "Crear Nuevo Producto"}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </h3>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <button className="modal-producto-close" onClick={onClose} aria-label="Cerrar">&times;</button>

┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <form onSubmit={handleSubmit} className="modal-producto-form">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <div className="modal-producto-group">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <label htmlFor="nombre">Nombre:</label>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <input
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а type="text"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а id="nombre"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а name="nombre"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а value={formData.nombre}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onChange={handleChange}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а required
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а />
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </div>

┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <div className="modal-producto-group">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <label htmlFor="categoria">Categor├нa:</label>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <select
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а id="categoria"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а name="categoria"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а value={formData.categoria}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onChange={handleChange}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а required
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а >
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {CATEGORIAS_VALIDAS.map((cat) => (
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <option key={cat} value={cat}>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {cat.charAt(0).toUpperCase() + cat.slice(1)}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </option>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ))}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </select>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <div className="modal-producto-group-inline">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <div className="modal-producto-group">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <label htmlFor="precio">Precio ($):</label>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <input
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а type="number"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а id="precio"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а name="precio"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а value={formData.precio}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onChange={handleChange}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а min="0.01"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а step="0.01"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а required
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а />
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <div className="modal-producto-group">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <label htmlFor="stock">Stock:</label>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <input
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а type="number"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а id="stock"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а name="stock"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а value={formData.stock}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onChange={handleChange}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а min="0"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а required
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а />
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {/* L├│gica de Carga de Imagen */}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <div className="modal-producto-group-image">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <label>Carga de Imagen:</label>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <div className="modal-producto-toggle-group">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <button 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а type="button" 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а className={`btn-toggle ${!useFileMode ? 'active' : ''}`}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onClick={() => setUseFileMode(false)}>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а Usar URL
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </button>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <button 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а type="button" 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а className={`btn-toggle ${useFileMode ? 'active' : ''}`}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onClick={() => setUseFileMode(true)}>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а Subir Archivo
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </button>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </div>

┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {!useFileMode ? (
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <input id="urlImagen-productos"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а type="text"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а name="imagen"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а placeholder="Pega la URL de la imagen aqu├н..."
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а value={formData.imagen}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onChange={handleChange}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а />
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ) : (
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <div className="modal-producto-file-input-wrapper">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <input
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а type="file"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а id="fileUpload"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а accept="image/*"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onChange={handleFileChange}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а style={{ display: 'none' }}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а />
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <label htmlFor="fileUpload" className="btn-file-upload">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {localFile ? `Archivo: ${localFile.name}` : "Seleccionar Imagen Local"}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </label>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {localFile && (
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <span className="file-info-text">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а Listo para guardar.
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </span>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а )}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а )}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {/* Fin L├│gica de Carga de Imagen */}

┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <div className="modal-producto-group">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <label htmlFor="descripcion">Descripci├│n:</label>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <textarea
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а id="descripcion"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а name="descripcion"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а value={formData.descripcion}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onChange={handleChange}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а />
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </div>

┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <div className="modal-producto-actions">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <button type="button" className="btn-cancelar" onClick={onClose}>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а Cancelar
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </button>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <button type="submit" className="btn-guardar">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {isEditing ? "Guardar Cambios" : "Crear Producto"}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </button>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </form>
┬а ┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а </div>
┬а ┬а );
}


// =================================================================
// 4. COMPONENTE PRINCIPAL: ProductosAdmin
// =================================================================
function ProductosAdmin() {
┬а ┬а const [productos, setProductos] = useState([]);
┬а ┬а const [loading, setLoading] = useState(true);
┬а ┬а const [error, setError] = useState(null);
┬а ┬а const [showModal, setShowModal] = useState(false);
┬а ┬а const [productoSeleccionado, setProductoSeleccionado] = useState(null);
┬а ┬а const [showStockModal, setShowStockModal] = useState(false);
┬а ┬а // NUEVO ESTADO PARA EL BUSCADOR
┬а ┬а const [searchTerm, setSearchTerm] = useState(''); 
┬а ┬а 
┬а ┬а // C├бlculo Din├бmico de las Alertas (se actualiza autom├бticamente con 'productos')
┬а ┬а const productosAAlertar = productos.filter(p => p.stock <= UMBRAL_STOCK_BAJO);
┬а ┬а const productosAgotados = productosAAlertar.filter(p => p.stock === 0);
┬а ┬а const productosCasiAgotados = productosAAlertar.filter(p => p.stock > 0 && p.stock <= UMBRAL_STOCK_BAJO);
┬а ┬а const totalAlertas = productosAAlertar.length;
┬а ┬а 
┬а ┬а // FUNCI├УN DE ALERTA MODIFICADA
┬а ┬а const getAlertaTexto = () => {
┬а ┬а ┬а ┬а const totalBajoStock = productosCasiAgotados.length;
┬а ┬а ┬а ┬а const totalAgotados = productosAgotados.length;
┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а if (totalAlertas === 0) return null;
┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а let texto = `ЁЯЪи Tienes **${totalAgotados} producto${totalAgotados !== 1 ? 's' : ''} AGOTADO${totalAgotados !== 1 ? 'S' : ''}**.`;
┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а if (totalBajoStock > 0) {
┬а ┬а ┬а ┬а ┬а ┬а texto += ` Adem├бs, **${totalBajoStock}** ${totalBajoStock === 1 ? 'est├б' : 'est├бn'} con stock BAJO (тЙд${UMBRAL_STOCK_BAJO}).`;
┬а ┬а ┬а ┬а } else {
┬а ┬а ┬а ┬а ┬а ┬а texto = `ЁЯЪи Tienes **${totalAgotados} producto${totalAgotados !== 1 ? 's' : ''} AGOTADO${totalAgotados !== 1 ? 'S' : ''}**.`;
┬а ┬а ┬а ┬а }
┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а if (totalAgotados === 0 && totalBajoStock > 0) {
┬а ┬а ┬а ┬а ┬а ┬а texto = `тЪая╕П Tienes **${totalBajoStock} producto${totalBajoStock !== 1 ? 's' : ''}** con stock BAJO (тЙд${UMBRAL_STOCK_BAJO}).`;
┬а ┬а ┬а ┬а }

┬а ┬а ┬а ┬а return texto;
┬а ┬а };
┬а ┬а 
┬а ┬а const alertaTexto = getAlertaTexto();


┬а ┬а // Funci├│n para obtener los datos de la API
┬а ┬а const fetchProductos = useCallback(() => {
┬а ┬а ┬а ┬а setLoading(true);
┬а ┬а ┬а ┬а fetch(API_URL)
┬а ┬а ┬а ┬а ┬а ┬а .then((res) => {
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а if (!res.ok) throw new Error("Fallo al cargar los productos");
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а return res.json();
┬а ┬а ┬а ┬а ┬а ┬а })
┬а ┬а ┬а ┬а ┬а ┬а .then((data) => {
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а setProductos(Array.isArray(data) ? data : []); 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а setLoading(false);
┬а ┬а ┬а ┬а ┬а ┬а })
┬а ┬а ┬а ┬а ┬а ┬а .catch((err) => {
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а setError(err.message);
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а setLoading(false);
┬а ┬а ┬а ┬а ┬а ┬а });
┬а ┬а }, []); 

┬а ┬а useEffect(() => {
┬а ┬а ┬а ┬а fetchProductos();
┬а ┬а }, [fetchProductos]); 
┬а ┬а 
┬а ┬а // --- L├УGICA DE FILTRADO ---
┬а ┬а const productosFiltrados = productos.filter(producto => {
┬а ┬а ┬а ┬а const lowerCaseSearch = searchTerm.toLowerCase();
┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а // Si el t├йrmino de b├║squeda est├б vac├нo, muestra todos
┬а ┬а ┬а ┬а if (!lowerCaseSearch) return true;

┬а ┬а ┬а ┬а // Filtra por nombre o categor├нa
┬а ┬а ┬а ┬а return (
┬а ┬а ┬а ┬а ┬а ┬а producto.nombre.toLowerCase().includes(lowerCaseSearch) ||
┬а ┬а ┬а ┬а ┬а ┬а producto.categoria.toLowerCase().includes(lowerCaseSearch)
┬а ┬а ┬а ┬а );
┬а ┬а });


┬а ┬а // --- Handlers CRUD (Crear, Editar, Guardar, Eliminar) ---
┬а ┬а const handleCrear = () => {
┬а ┬а ┬а ┬а setProductoSeleccionado(null); 
┬а ┬а ┬а ┬а setShowModal(true);
┬а ┬а };

┬а ┬а const handleEditar = (producto) => {
┬а ┬а ┬а ┬а setProductoSeleccionado(producto);
┬а ┬а ┬а ┬а setShowModal(true);
┬а ┬а };

┬а ┬а const handleGuardar = async (producto) => {
┬а ┬а ┬а ┬а const isEditing = !!productoSeleccionado;
┬а ┬а ┬а ┬а const url = isEditing ? `${API_URL}/${producto.id}` : API_URL;
┬а ┬а ┬а ┬а const method = isEditing ? "PUT" : "POST";

┬а ┬а ┬а ┬а if (!isEditing) {
┬а ┬а ┬а ┬а ┬а ┬а // Generaci├│n simple de ID, asumiendo json-server
┬а ┬а ┬а ┬а ┬а ┬а producto.id = crypto.randomUUID().slice(0, 4); 
┬а ┬а ┬а ┬а }

┬а ┬а ┬а ┬а try {
┬а ┬а ┬а ┬а ┬а ┬а const res = await fetch(url, {
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а method: method,
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а headers: { "Content-Type": "application/json" },
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а body: JSON.stringify(producto),
┬а ┬а ┬а ┬а ┬а ┬а });

┬а ┬а ┬а ┬а ┬а ┬а if (!res.ok) throw new Error(`Fallo al ${isEditing ? "actualizar" : "crear"} producto.`);
┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а ┬а ┬а setShowModal(false); 
┬а ┬а ┬а ┬а ┬а ┬а fetchProductos(); // Recargar la lista
┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а } catch (err) {
┬а ┬а ┬а ┬а ┬а ┬а console.error(err);
┬а ┬а ┬а ┬а ┬а ┬а alert(`Error al ${isEditing ? "guardar los cambios" : "crear el producto"}.`);
┬а ┬а ┬а ┬а }
┬а ┬а };

┬а ┬а const handleEliminar = async (id, nombre) => {
┬а ┬а ┬а ┬а if (!window.confirm(`┬┐Est├б seguro de eliminar el producto: ${nombre}?`)) return;

┬а ┬а ┬а ┬а try {
┬а ┬а ┬а ┬а ┬а ┬а const res = await fetch(`${API_URL}/${id}`, { method: "DELETE" });

┬а ┬а ┬а ┬а ┬а ┬а if (!res.ok) throw new Error("Fallo al eliminar el producto.");
┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а ┬а ┬а setProductos((prev) => prev.filter((p) => p.id !== id));
┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а ┬а ┬а alert(`Producto "${nombre}" eliminado con ├йxito.`);
┬а ┬а ┬а ┬а } catch (err) {
┬а ┬а ┬а ┬а ┬а ┬а console.error(err);
┬а ┬а ┬а ┬а ┬а ┬а alert("Error al eliminar el producto.");
┬а ┬а ┬а ┬а }
┬а ┬а };


┬а ┬а if (loading) return <div className="admin-producto-loading">Cargando productos...</div>;
┬а ┬а if (error) return <div className="admin-producto-error">Error: {error}</div>;

┬а ┬а return (
┬а ┬а ┬а ┬а <div className="admin-producto-container">
┬а ┬а ┬а ┬а ┬а ┬а <h2 className="admin-producto-header">Gesti├│n de Inventario de Productos</h2>
┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а ┬а ┬а <div className="admin-producto-header-actions">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а<button className="admin-producto-btn-nuevo" onClick={handleCrear}>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬аCrear Nuevo Producto
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а</button>
┬а ┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а ┬а ┬а {/* --- 1. Buscador (NUEVO) --- */}
┬а ┬а ┬а ┬а ┬а ┬а <div className="admin-producto-search-bar">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <input
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а type="text"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а placeholder="Buscar por Nombre o Categor├нa..."
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а value={searchTerm}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onChange={(e) => setSearchTerm(e.target.value)}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а className="admin-producto-search-input"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а />
┬а ┬а ┬а ┬а ┬а ┬а </div>

┬а ┬а ┬а ┬а ┬а ┬а {/* --- 2. Aviso de Stock Resumido con Icono de Men├║ --- */}
┬а ┬а ┬а ┬а ┬а ┬а {totalAlertas > 0 && (
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <div className="stock-alerta-contenedor">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <div className="stock-alerta-aviso stock-alerta-aviso--activo">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <p dangerouslySetInnerHTML={{ __html: alertaTexto.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>') }} />
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <button
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onClick={() => setShowStockModal(true)}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а className="stock-alerta-boton-detalle" // Este es el bot├│n тШ░
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а aria-label="Ver detalles de stock"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а >
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а тШ░ 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </button>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а ┬а ┬а )}
┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а ┬а ┬а {/* --- Tabla de Productos --- */}
┬а ┬а ┬а ┬а ┬а ┬а <div className="admin-producto-tabla-wrapper">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <table className="admin-producto-tabla">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <thead>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <tr>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <th>ID</th>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <th>Nombre</th>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <th>Categor├нa</th>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <th>Precio</th>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <th>Stock</th>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <th>Acciones</th>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </tr>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </thead>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <tbody>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {productosFiltrados.length === 0 ? (
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <tr>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <td colSpan="6" className="admin-producto-no-data">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а No se encontraron productos con el t├йrmino de b├║squeda.
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </td>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </tr>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ) : (
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а productosFiltrados.map((producto) => (
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <tr key={producto.id} className={producto.stock <= UMBRAL_STOCK_BAJO ? 'fila-stock-bajo' : ''}>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <td className="admin-producto-id">{producto.id}</td>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <td>{producto.nombre}</td>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <td>{producto.categoria.charAt(0).toUpperCase() + producto.categoria.slice(1)}</td>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <td className="admin-producto-precio">${producto.precio.toLocaleString('es-AR')}</td>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <td>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <span className={`admin-producto-stock admin-producto-stock-${producto.stock > UMBRAL_STOCK_BAJO ? 'ok' : producto.stock === 0 ? 'cero' : 'alerta'}`}>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {producto.stock}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </span>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </td>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <td className="admin-producto-actions">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <button 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а className="admin-producto-btn-editar" 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onClick={() => handleEditar(producto)}>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а Editar
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </button>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <button 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а className="admin-producto-btn-eliminar" 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onClick={() => handleEliminar(producto.id, producto.nombre)}>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а Eliminar
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </button>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </td>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </tr>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ))
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а )}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </tbody>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </table>
┬а ┬а ┬а ┬а ┬а ┬а </div>

┬а ┬а ┬а ┬а ┬а ┬а {/* --- Modal de Edici├│n/Creaci├│n --- */}
┬а ┬а ┬а ┬а ┬а ┬а {showModal && (
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <ProductoFormModal
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а productoInicial={productoSeleccionado}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onClose={() => setShowModal(false)}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onGuardar={handleGuardar}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а />
┬а ┬а ┬а ┬а ┬а ┬а )}
┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а ┬а ┬а {/* --- Modal de Alertas de Stock (Muestra los detalles) --- */}
┬а ┬а ┬а ┬а ┬а ┬а {showStockModal && (
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <AlertaStockModal
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а productosAAlertar={productosAAlertar}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onClose={() => setShowStockModal(false)}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а />
┬а ┬а ┬а ┬а ┬а ┬а )}
┬а ┬а ┬а ┬а </div>
┬а ┬а );
}

export default ProductosAdmin;